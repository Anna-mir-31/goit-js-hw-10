{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst datePicker = document.querySelector('#datetime-picker');\nconst daysRef = document.querySelector('[data-days]');\nconst hoursRef = document.querySelector('[data-hours]');\nconst minutesRef = document.querySelector('[data-minutes]');\nconst secondsRef = document.querySelector('[data-seconds]');\n\nlet timerId = null;\nlet selectedDate = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const date = selectedDates[0];\n    if (date <= new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      selectedDate = date;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  datePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = selectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI(0);\n      datePicker.disabled = false;\n      return;\n    }\n\n    updateTimerUI(diff);\n  }, 1000);\n});\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysRef.textContent = addLeadingZero(days);\n  hoursRef.textContent = addLeadingZero(hours);\n  minutesRef.textContent = addLeadingZero(minutes);\n  secondsRef.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","datePicker","daysRef","hoursRef","minutesRef","secondsRef","timerId","selectedDate","options","selectedDates","date","iziToast","flatpickr","diff","updateTimerUI","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EAAU,KACVC,EAAe,KAEnBP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAOD,EAAc,CAAC,EACxBC,GAAQ,IAAI,MACdC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBO,EAAeG,EAElB,CACH,EAEAE,EAAUX,EAAYO,CAAO,EAE7BR,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAW,SAAW,GAEtBK,EAAU,YAAY,IAAM,CAE1B,MAAMO,EAAON,EADD,IAAI,KAGhB,GAAIM,GAAQ,EAAG,CACb,cAAcP,CAAO,EACrBQ,EAAc,CAAC,EACfb,EAAW,SAAW,GACtB,MACD,CAEDa,EAAcD,CAAI,CACnB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAcC,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDb,EAAQ,YAAcmB,EAAeL,CAAI,EACzCb,EAAS,YAAckB,EAAeJ,CAAK,EAC3Cb,EAAW,YAAciB,EAAeH,CAAO,EAC/Cb,EAAW,YAAcgB,EAAeF,CAAO,CACjD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}